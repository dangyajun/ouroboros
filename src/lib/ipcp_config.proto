/*
 * Ouroboros - Copyright (C) 2016 - 2021
 *
 * Layer configuration message
 *
 *    Dimitri Staessens <dimitri@ouroboros.rocks>
 *    Sander Vrijders   <sander@ouroboros.rocks>
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., http://www.fsf.org/about/contact/.
 */

syntax = "proto2";

message layer_info_msg {
        required string layer_name    =  1;
        required uint32 dir_hash_algo =  2;
}

message ipcp_config_msg {
        required layer_info_msg layer_info =  1;
        required int32 ipcp_type           =  2;
        // Config for unicast IPCP
        optional uint32 addr_size          =  3;
        optional uint32 eid_size           =  4;
        optional uint32 max_ttl            =  5;
        optional uint32 addr_auth_type     =  6;
        optional uint32 routing_type       =  7;
        optional uint32 cong_avoid         =  8;
        // Config for UDP
        optional uint32 ip_addr            =  9;
        optional uint32 dns_addr           = 10;
        optional uint32 port               = 11;
        // Config for the Ethernet
        optional string dev                = 12;
        // Config for DIX Ethernet
        optional uint32 ethertype          = 13;
}

enum enroll_code {
        ENROLL_REQ  = 1;
        ENROLL_BOOT = 2;
        ENROLL_DONE = 4;
};

message enroll_msg {
        required enroll_code     code   = 1;
        optional ipcp_config_msg conf   = 2;
        optional int64           t_sec  = 3;
        optional uint32          t_nsec = 4;
        optional int32           result = 5;
};